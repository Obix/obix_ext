factory text_file_parameter_storage type:text_file_parameter_storage

	// this factory uses java.util.Properties to store and restore parameters
	// see Java java.util.Properties.load(Reader reader) documention for a description of the text file format supported
	// and look at the test data in co_restore_string_parameter_list

	java_header
		import java.io.FileWriter;
		import java.io.FileReader;
		import java.io.IOException;

		import java.util.Properties;
		import java.util.Map;
		
		import org.obix.obix_core.java.fa_java_exception;
		import org.obix.obix_core.java.se_java_IO;
	end java_header

	command store_parameter_list
		script
			java
				Properties properties = new Properties();
			end java
			
			repeat for each !gt_parameter<*> parameter in i_parameter_list
				const string value = iif c_parameter.value #r void then c_parameter.value.to_string else se_any_type.void_object_as_string.to_string end if
				java
					properties.setProperty ( c_parameter.getId().getValue().java_value(), c_value.java_value() );
				end java
			end repeat
			
			var java_exception java_exception = void
			java
				FileWriter writer = new FileWriter ( i_file.getValue().java_value() );
				try {
					properties.store ( writer, null );
				} catch ( IOException e ) {
					v_java_exception = new fa_java_exception ( e );
				} finally {
					se_java_IO.close_writer ( writer );
				}
			end java
			
			if v_java_exception #r void then
				o_error = fa_resource_error.create ( &
					id = "store_parameters_to_text_file" &
					description = """Parameters could not be stored to file '{{i_file}}'. The following error occured:
{{v_java_exception.message}}""" &
					java_exception = v_java_exception &
					resource = i_file )
				i_error_handler.handle_system_error ( o_error )
			end if
		end
	end
	
	command restore_parameter_list
		script
			var string_parameter_list string_parameter_list
			var resource_error error
			co_restore_string_parameter_list ( &
				file = i_file &
				error_handler = i_error_handler ) &
				( v_string_parameter_list = result &
				v_error = error )

			if v_error #r void then
				o_error_list = !indexed_list_factory<resource_error>.create_singleton ( v_error )
				exit script
			end if

			const !gt_verified_parameter_list_creator<string> parameter_list_creator = !gf_verified_parameter_list_creator<string>.create
			c_parameter_list_creator.create_verified_parameter_list ( &
				unverified_parameter_list = v_string_parameter_list &
				formal_parameter_list = i_formal_parameter_list &
				error_handler = i_error_handler ) &
				( o_result = result &
				o_error_list = error_list )
		end
	end
	
	command restore_string_parameter_list
		script
			var java_exception java_exception = void
			java
				Properties properties = new Properties();
				FileReader reader = new FileReader ( i_file.getValue().java_value() );
				try {
					properties.load ( reader );
				} catch ( IOException e ) {
					v_java_exception = new fa_java_exception ( e );
				} finally {
					se_java_IO.close_reader ( reader );
				}
			end java
			
			if v_java_exception #r void then
				o_error = fa_resource_error.create ( &
					id = "restore_parameters_from_text_file" &
					description = """Parameters could not be restored from file '{{i_file}}'. The following error occured:
{{v_java_exception.message}}""" &
					java_exception = v_java_exception &
					resource = i_file )
				i_error_handler.handle_system_error ( o_error )
				exit script
			end if
			
			const mutable_string_parameter_list mutable_list = fa_mutable_string_parameter_list.create
			var string_value id
			var string value
			java
				for ( Map.Entry entry: properties.entrySet() ) {
					v_id = new fa_string_value ((String) entry.getKey() );
					v_value = new fa_string ((String) entry.getValue() );
					end java
						const string_parameter parameter = fa_string_parameter.create ( &
							id = fa_parameter_id.create ( v_id ) &
							value = iif v_value #v se_any_type.void_object_as_string then v_value else void end if )
						c_mutable_list.add ( c_parameter )
					java
				}
			end java

			o_result = c_mutable_list.make_immutable
		end
		test
			script
				const string file_content = '''# comment
# comment line 2

city1=Bangkok
city2:Bangkok
city3 = Bangkok
   city4:     Bangkok
		city5		:Bangkok
city6 = Muenchen in Deutschland
empty_string1 =
empty_string2 = 
space = \ 
no_space = " "
tab = \t
CR_LF = \r\n
void_string = #void#
multiline = apple, banana, pear, \
            cantaloupe, watermelon, \
			kiwi, mango
multiline_with_LF = apple, banana, pear, \n\
            cantaloupe, watermelon, \n\
			kiwi, mango
number:123

# comment and empty lines
	 
the\ sun\ shines= yes
'''
				const file storage_file = se_file.create_temporary_file.result ( delete_file_on_exit = yes )
				var resource_error store_error = se_text_file_IO.store_string_to_existing_file ( &
					string = c_file_content &
					file = c_storage_file )
				verify v_store_error =r void
				
				const text_file_parameter_storage storage = co_create
				const string_parameter_list parameter_list = c_storage.restore_string_parameter_list.result ( file = c_storage_file )
				verify c_parameter_list #r void

				verify c_parameter_list.item_count compare =v 17
				verify c_parameter_list.require_value ( fa_parameter_id.create ( "city1"~ ) ) compare =v "Bangkok"
				verify c_parameter_list.require_value ( fa_parameter_id.create ( "city2"~ ) ) compare =v "Bangkok"
				verify c_parameter_list.require_value ( fa_parameter_id.create ( "city3"~ ) ) compare =v "Bangkok"
				verify c_parameter_list.require_value ( fa_parameter_id.create ( "city4"~ ) ) compare =v "Bangkok"
				verify c_parameter_list.require_value ( fa_parameter_id.create ( "city5"~ ) ) compare =v "Bangkok"
				verify c_parameter_list.require_value ( fa_parameter_id.create ( "city6"~ ) ) compare =v "Muenchen in Deutschland"
				verify c_parameter_list.require_value ( fa_parameter_id.create ( "empty_string1"~ ) ) compare =v ""
				verify c_parameter_list.require_value ( fa_parameter_id.create ( "empty_string2"~ ) ) compare =v ""
				verify c_parameter_list.require_value ( fa_parameter_id.create ( "space"~ ) ) compare =v " "
				verify c_parameter_list.require_value ( fa_parameter_id.create ( "no_space"~ ) ) compare =v '''" "'''
				verify c_parameter_list.require_value ( fa_parameter_id.create ( "tab"~ ) ) compare =v "\t"
				verify c_parameter_list.require_value ( fa_parameter_id.create ( "CR_LF"~ ) ) compare =v "\r\n"
				verify c_parameter_list.require_value ( fa_parameter_id.create ( "void_string"~ ) ) =r void
				verify c_parameter_list.require_value ( fa_parameter_id.create ( "multiline"~ ) ) compare =v "apple, banana, pear, cantaloupe, watermelon, kiwi, mango"
				verify c_parameter_list.require_value ( fa_parameter_id.create ( "multiline_with_LF"~ ) ) compare =v """apple, banana, pear, {{se_string_constants.Unix_new_line}}cantaloupe, watermelon, {{se_string_constants.Unix_new_line}}kiwi, mango"""
				verify c_parameter_list.require_value ( fa_parameter_id.create ( "number"~ ) ) compare =v "123"
				verify c_parameter_list.require_value ( fa_parameter_id.create ( "the sun shines"~ ) ) compare =v "yes"
				
			end
		end
	end

	creator create kind:in_all end
	
	%fa_parameter_storage_test
	
end